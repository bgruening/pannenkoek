{"name":"Pannenkoek","tagline":"A tool for generating LEfSe ready data from an OTU table and mapping file. Sample metadata is added as a new row based on user inputs.","body":"# **Pannenkoek** \r\nv0.1.6  \r\n  \r\nSubset a Qiime biom file to LEfSe-ready format\r\n\r\nA tool to create LEfSe-ready tables from your main OTU table in QIIME. LEfSe is a great tool for microbial diversity analysis, but there are many repetitive steps if you want to analyze multiple time points between two groups. Pannenkoek was made to simplify that process. You can input your main OTU biom file, Treatment group column name and Timepoint column name and it will do the hard work summarizing the table, removing the unused metadata fields, and create multiple tables based on time.\r\n\r\n## Get Started\r\nHighly recommend using pip as it will install all other necessary dependencies.\r\n\r\n```\r\n\r\npip install https://github.com/twbattaglia/pannenkoek/zipball/master\r\n\r\n```\r\n\r\n\r\n\r\n## Dependencies  \r\nR has to be initialized from the command line first to install packages. So just run R. (seriously)  \r\n```\r\n\r\n\r\n# 1) Initialize R in terminal by running the command 'R'\r\n$ R\r\n\r\n# 2) Run the command below to install the necessary packages. You may get an error stating, 'packages ‘splines’, ‘stats4’ are not available (as a binary package for R version 3.1.3)' but this can be ignored.\r\n$ install.packages(c('splines','stats4','survival','mvtnorm','modeltools','coin','MASS'), repos = \"http://cran.us.r-project.org\")\r\n\r\n\r\n  \r\n```\r\nStart a new terminal session to exit out of R\r\n\r\n\r\n\r\n### Running the Command  \r\n\r\n```\r\n#!bash\r\n# Example Command\r\npannenkoek.py -i INPUT_BIOM.biom -o OUTPUT_FOLDER/ -m MAPPING_FILE.txt -level 7\r\n-class colTreatment -split colDay -compare CON,Group1 -a 0.01\r\n\r\n```\r\n```\r\n#!python\r\n\r\n\r\nusage: pannenkoek.py [-h] [-i INPUT] [-o OUTPUT] [-m MAPPING] [-s SUBJECTID]\r\n                     [-c CLASSID] [-sc -subclass SUBCLASSID] [-l LEVEL]\r\n                     [-spl SPLITBY] [-comp COMPARE] [--no_lefse]\r\n                     [-a ANOVA_CUTOFF] [-e LDA_CUTOFF] [-strict STRICTNESS]\r\n\r\nSummarize taxa and subset by time.\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -i INPUT, -input INPUT\r\n                        Location of the Biom/OTU file to subset and use for\r\n                        LEfSe analysis.(Must be .biom format)\r\n  -o OUTPUT, -output OUTPUT\r\n                        Directory to place all the files.\r\n  -m MAPPING, -map MAPPING\r\n                        Location of the mapping file associated with Biom\r\n                        File.\r\n  -s SUBJECTID, -subject SUBJECTID\r\n                        By Default = #SampleID. Only change if your SampleID\r\n                        header differs.\r\n  -c CLASSID, -class CLASSID\r\n                        This will be the column within your mapping file that\r\n                        has the data which differentiates between groups. This\r\n                        is typically the Treatment column of your data. When\r\n                        formatting the data for LEfSe analysis, this will be\r\n                        the column used as a class. When choosing particular\r\n                        comparisons with \"-compare\" this classID columns is\r\n                        where it looks for the variables. Choos wisely.\r\n  -sc -subclass SUBCLASSID\r\n                        This will be used in similar way to the classID, but\r\n                        is typically reserved for another level of\r\n                        comparisons. See the use of subclasses with LEfSe\r\n                        data. \"http://genomebiology.com/2011/12/6/r60\"\r\n  -l LEVEL, -level LEVEL\r\n                        level to use for summarize_taxa.py.\r\n  -spl SPLITBY, -split SPLITBY\r\n                        This is the column name of the variable to use for\r\n                        splitting the table. The table is split over a\r\n                        variable to reduce the amount of work to create a new\r\n                        formatted lefse table for each timepoint of an\r\n                        experiment. This is one of the core features of\r\n                        pannenkoek. Choose the column which will create the\r\n                        analysis you want.\r\n  -comp COMPARE, -compare COMPARE\r\n                        This option lets you select a comparison between\r\n                        variables found in your provded classID column. For\r\n                        example if you had 3 different experimental groups and\r\n                        you wanted to only see the comparisons between Control\r\n                        and Group2 over time you can input, \"Control,Group2\"\r\n                        in this field and it will subset and only include the\r\n                        sampleIDs that are from either group. This option is\r\n                        very useful for experiments with multiple groups.\r\n  --no_lefse            If you only want subsetted tables and no formatted or\r\n                        lefse-run data, add this option to the command.\r\n  -a ANOVA_CUTOFF, -anovap ANOVA_CUTOFF\r\n                        Change the cutoff for significance between OTUs.\r\n                        Default is 0.05.\r\n  -e LDA_CUTOFF, -effect_size LDA_CUTOFF\r\n                        Change the cutoff for effect size. Default is 2.\r\n  -strict STRICTNESS, -strictness STRICTNESS\r\n                        Change the strictness of the comparisons. Can be\r\n                        changed to less strict(1). Default is 0 (more-strict).\r\n\r\n```\r\n","google":"UA-62277641-1","note":"Don't delete this file! It's used internally to help with page regeneration."}